by_country
## 2.1: Retrieve the worldwide data for
## "covid" in the last 12 months
trends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m")
## 2.1: Retrieve the worldwide data for
## "covid" in the last 12 months
trends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m")
## 2.2: Return the names of the datasets from trends
names(trends)
## 2.3: Search for the keywords "covid" and
## "vaccine" in US in the last 12 months
gtrends(keyword = c("covid","vaccine"),time = "today 12-m", geo = "US")
## 3.1: Return the interest over time
## data from the trends dataset
interest_time <- trends$interest_over_time
## 3.2: Print the interest_time data
interest_time
## 3.3: Return the dates with the highest number of hits
interest_time %>%
top_n(5,hits) %>%
arrange(desc(hits))
mx = interest_time[interest_time$hits == max(interest_time$hits),]$date
## 4.1: Visualize the interest over time data
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 4.2: Zoom in to check between January 1, 2021
## to April 30, 2021
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 5.1: Return the related queries data
rel_queries <- trends$related_queries
rel_queries
library(tidyverse)
## 5.2: Create a bar plot for the queries
## most related to covid
rel_queries %>%
filter(grepl('covid', value) & related_queries == 'top' ) %>%
mutate(subject = as.numeric(subject)) %>%
ggplot(aes(x = reorder(value,subject), y = subject, fill = 'red')) +
geom_bar(stat = "identity", show.legend = F) +
coord_flip() +
theme_get() +
labs(x = "Search Value", y = "Subject") +
ggtitle("Google Queries most related to 'Covid' ") +
theme(plot.title = element_text(colour = "red", size = 18),
axis.title = element_text(colour = "blue"))
## 6.1: Return the interest by country data
by_country <- trends$interest_by_country
by_country
## 6.2: Create a variable called "countries"
## from the world data and interest by country data
## 6.3: Create a map of the interest by countries
tm_shape(countries) +
tm_fill("hits",
title = "Search Interest",
legend.reverse = T,
id = "name_long",
popup.vars = c(Name = "name_long", Search.Interest = "hits",
Population = "pop", Life.Expectancy = "lifeExp",
GDP.per.capita = "gdpPercap"))
by_country <- trends$interest_by_country
by_country
## 2.1: Retrieve the worldwide data for
## "covid" in the last 12 months
trends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m", geo = "US")
wtrends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m")
## 2.2: Return the names of the datasets from trends
names(trends)
## 2.3: Search for the keywords "covid" and
## "vaccine" in US in the last 12 months
gtrends(keyword = c("covid","vaccine"),time = "today 12-m", geo = "US")
## 3.1: Return the interest over time
## data from the trends dataset
interest_time <- trends$interest_over_time
## 3.2: Print the interest_time data
interest_time
## 3.3: Return the dates with the highest number of hits
interest_time %>%
top_n(5,hits) %>%
arrange(desc(hits))
mx = interest_time[interest_time$hits == max(interest_time$hits),]$date
## 4.1: Visualize the interest over time data
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 4.2: Zoom in to check between January 1, 2021
## to April 30, 2021
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 5.1: Return the related queries data
rel_queries <- trends$related_queries
rel_queries
library(tidyverse)
## 5.2: Create a bar plot for the queries
## most related to covid
rel_queries %>%
filter(grepl('covid', value) & related_queries == 'top' ) %>%
mutate(subject = as.numeric(subject)) %>%
ggplot(aes(x = reorder(value,subject), y = subject, fill = 'red')) +
geom_bar(stat = "identity", show.legend = F) +
coord_flip() +
theme_get() +
labs(x = "Search Value", y = "Subject") +
ggtitle("Google Queries most related to 'Covid' ") +
theme(plot.title = element_text(colour = "red", size = 18),
axis.title = element_text(colour = "blue"))
## 6.1: Return the interest by country data
by_country <- wtrends$interest_by_country
by_country
## 6.2: Create a variable called "countries"
## from the world data and interest by country data
## 6.3: Create a map of the interest by countries
tm_shape(countries) +
tm_fill("hits",
title = "Search Interest",
legend.reverse = T,
id = "name_long",
popup.vars = c(Name = "name_long", Search.Interest = "hits",
Population = "pop", Life.Expectancy = "lifeExp",
GDP.per.capita = "gdpPercap"))
## 1.1: Importing required packages
library(gtrendsR)
library(dplyr)
library(ggplot2)
library(ggforce)
library(ggrepel)
library(spData)
library(tmap)
library(DT)
## 2.1: Retrieve the worldwide data for
## "covid" in the last 12 months
trends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m", geo = "US")
wtrends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m")
## 2.2: Return the names of the datasets from trends
names(trends)
## 2.3: Search for the keywords "covid" and
## "vaccine" in US in the last 12 months
gtrends(keyword = c("covid","vaccine"),time = "today 12-m", geo = "US")
## 3.1: Return the interest over time
## data from the trends dataset
interest_time <- trends$interest_over_time
## 3.2: Print the interest_time data
interest_time
## 3.3: Return the dates with the highest number of hits
interest_time %>%
top_n(5,hits) %>%
arrange(desc(hits))
mx = interest_time[interest_time$hits == max(interest_time$hits),]$date
## 4.1: Visualize the interest over time data
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 4.2: Zoom in to check between January 1, 2021
## to April 30, 2021
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 5.1: Return the related queries data
rel_queries <- trends$related_queries
rel_queries
library(tidyverse)
## 5.2: Create a bar plot for the queries
## most related to covid
rel_queries %>%
filter(grepl('covid', value) & related_queries == 'top' ) %>%
mutate(subject = as.numeric(subject)) %>%
ggplot(aes(x = reorder(value,subject), y = subject, fill = 'red')) +
geom_bar(stat = "identity", show.legend = F) +
coord_flip() +
theme_get() +
labs(x = "Search Value", y = "Subject") +
ggtitle("Google Queries most related to 'Covid' ") +
theme(plot.title = element_text(colour = "red", size = 18),
axis.title = element_text(colour = "blue"))
## 6.1: Return the interest by country data
by_country <- wtrends$interest_by_country
by_country
## 6.2: Create a variable called "countries"
## from the world data and interest by country data
## 6.3: Create a map of the interest by countries
tm_shape(countries) +
tm_fill("hits",
title = "Search Interest",
legend.reverse = T,
id = "name_long",
popup.vars = c(Name = "name_long", Search.Interest = "hits",
Population = "pop", Life.Expectancy = "lifeExp",
GDP.per.capita = "gdpPercap"))
## 2.1: Retrieve the worldwide data for
## "covid" in the last 12 months
trends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m", geo = "US")
wtrends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m")
## 2.2: Return the names of the datasets from trends
names(trends)
## 2.3: Search for the keywords "covid" and
## "vaccine" in US in the last 12 months
gtrends(keyword = c("covid","vaccine"),time = "today 12-m", geo = "US")
## 3.1: Return the interest over time
## data from the trends dataset
interest_time <- trends$interest_over_time
## 3.2: Print the interest_time data
interest_time
## 3.3: Return the dates with the highest number of hits
interest_time %>%
top_n(5,hits) %>%
arrange(desc(hits))
mx = interest_time[interest_time$hits == max(interest_time$hits),]$date
## 4.1: Visualize the interest over time data
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 4.2: Zoom in to check between January 1, 2021
## to April 30, 2021
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 5.1: Return the related queries data
rel_queries <- trends$related_queries
rel_queries
library(tidyverse)
## 5.2: Create a bar plot for the queries
## most related to covid
rel_queries %>%
filter(grepl('covid', value) & related_queries == 'top' ) %>%
mutate(subject = as.numeric(subject)) %>%
ggplot(aes(x = reorder(value,subject), y = subject, fill = 'red')) +
geom_bar(stat = "identity", show.legend = F) +
coord_flip() +
theme_get() +
labs(x = "Search Value", y = "Subject") +
ggtitle("Google Queries most related to 'Covid' ") +
theme(plot.title = element_text(colour = "red", size = 18),
axis.title = element_text(colour = "blue"))
## 6.1: Return the interest by country data
by_country <- wtrends$interest_by_country
by_country
## 6.2: Create a variable called "countries"
## from the world data and interest by country data
## 6.3: Create a map of the interest by countries
tm_shape(countries) +
tm_fill("hits",
title = "Search Interest",
legend.reverse = T,
id = "name_long",
popup.vars = c(Name = "name_long", Search.Interest = "hits",
Population = "pop", Life.Expectancy = "lifeExp",
GDP.per.capita = "gdpPercap"))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 3.3: Return the dates with the highest number of hits
interest_time %>%
top_n(5,hits) %>%
arrange(date)
hits
## 3.3: Return the dates with the highest number of hits
interest_time %>%
top_n(5,hits) %>%
arrange(desc(hits))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
scale_x_log10(x=2021)
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
scale_x_log10()
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
scale_x_log10() +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
mx = interest_time[interest_time$hits == max(interest_time$hits),]$date
mx = interest_time[interest_time$hits == max(interest_time$hits),]$date
mx
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
scale_x_log10() +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
scale_y_log10() +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 4.1: Visualize the interest over time data
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),Sys.Date())) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),as.POSIXct(Sys.Date()) )) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 6.1: Return the interest by country data
by_country <- wtrends$interest_by_country
by_country
by_country
## 2.1: Retrieve the worldwide data for
## "covid" in the last 12 months
trends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m", geo = "US")
wtrends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m")
## 2.2: Return the names of the datasets from trends
names(trends)
## 2.3: Search for the keywords "covid" and
## "vaccine" in US in the last 12 months
gtrends(keyword = c("covid","vaccine"),time = "today 12-m", geo = "US")
## 3.1: Return the interest over time
## data from the trends dataset
interest_time <- trends$interest_over_time
## 3.2: Print the interest_time data
interest_time
## 3.3: Return the dates with the highest number of hits
interest_time %>%
top_n(5,hits) %>%
arrange(desc(hits))
mx = interest_time[interest_time$hits == max(interest_time$hits),]$date
## 4.1: Visualize the interest over time data
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 4.2: Zoom in to check between January 1, 2021
## to April 30, 2021
interest_time %>%
ggplot(aes(x = date, y = hits, color = keyword)) +
geom_smooth(span = 0.1, se = FALSE) +
facet_zoom(xlim =  c(as.POSIXct(Sys.Date()-60),as.POSIXct(Sys.Date()) )) +
geom_point(color = "black") +
geom_vline(xintercept = as.POSIXct(mx), color = "red", linetype = "dashed") +
theme_bw() +
labs(title = "Google Web search for 'Covid & Vaccine' in 2021 (Zooming last 60 days)",
x = NULL, y = "Interest",
caption = paste("Google Web Search Analysis :",Sys.Date()))
## 5.1: Return the related queries data
rel_queries <- trends$related_queries
rel_queries
library(tidyverse)
## 5.2: Create a bar plot for the queries
## most related to covid
rel_queries %>%
filter(grepl('covid', value) & related_queries == 'top' ) %>%
mutate(subject = as.numeric(subject)) %>%
ggplot(aes(x = reorder(value,subject), y = subject, fill = 'red')) +
geom_bar(stat = "identity", show.legend = F) +
coord_flip() +
theme_get() +
labs(x = "Search Value", y = "Subject") +
ggtitle("Google Queries most related to 'Covid' ") +
theme(plot.title = element_text(colour = "red", size = 18),
axis.title = element_text(colour = "blue"))
## 6.1: Return the interest by country data
by_country <- wtrends$interest_by_country
by_country
## 6.2: Create a variable called "countries"
## from the world data and interest by country data
## 6.3: Create a map of the interest by countries
tm_shape(countries) +
tm_fill("hits",
title = "Search Interest",
legend.reverse = T,
id = "name_long",
popup.vars = c(Name = "name_long", Search.Interest = "hits",
Population = "pop", Life.Expectancy = "lifeExp",
GDP.per.capita = "gdpPercap"))
## 6.1: Return the interest by country data
by_country <- wtrends$interest_by_country
by_country
wtrends$interest_by_country
wtrends <- gtrends(keyword = c("covid","vaccine"), time = "today 12-m")
## 2.2: Return the names of the datasets from trends
names(wtrends)
## 2.2: Return the names of the datasets from trends
names(trends)
